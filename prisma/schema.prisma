generator client {
  provider = "prisma-provider-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model Users {
  id          Int       @id @default(autoincrement())
  username    String    @db.VarChar(45)
  email       String    @db.VarChar(45)
  password    String    @db.VarChar(100)
  level       Int
  profile_pic String?   @db.VarChar(250)
  description String?   @db.VarChar(100)
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  points      Int
}

model Badges {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(45)
  description String   @db.VarChar(45)
  icon        String   @db.VarChar(300)
}


model UserBadges {
  badges_id Int
  user_id   Int
  earned_at DateTime @default(now())
  @@id([badges_id, user_id])
}


model Notifications {
  id            Int      @id @default(autoincrement())
  message       String   @db.VarChar(45)
  is_read       Boolean  @default(false)
  created_at    DateTime @default(now())
  type          String   @db.Enum("ENUM")
  user_id       Int

}


model LearningSteps {
  id               Int      @id @default(autoincrement())
  step_title       String   @db.VarChar(45)
  step_description String   @db.VarChar(45)
  is_completed     Boolean  @default(false)
  created_at       DateTime @default(now())
  learning_plan_id Int
}


model LearningPlans {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(45)
  description String   @db.VarChar(45)
  is_completed Boolean  @default(false)
  created_at  DateTime  @default(now())
  user_id     Int
}


model Interviews {
  id           Int      @id @default(autoincrement())
  type         String   @db.Enum("ENUM")
  score        Float
  feedback     String?  @db.VarChar(500)
  date         DateTime
  status       String   @db.Enum("ENUM")
  created_at   DateTime @default(now())
  user_id      Int
  moderator_id Int
}


model Chats {
  id         Int      @id @default(autoincrement())
  message    String   @db.VarChar(1000)
  sent_at    DateTime @default(now())
  sender_id  Int
  channel_id Int
}


model CommunityMembers {
  user_id       Int
  community_id  Int
  role          String   @db.Enum("ENUM")
  joined_at     DateTime @default(now())
  @@id([user_id, community_id])
}


model CommunityChannels {
  id           Int      @id @default(autoincrement())
  name         String   @db.VarChar(45)
  description  String   @db.VarChar(45)
  created_at   DateTime @default(now())
  community_id Int
  creator_id   Int
}


model Communities {
  id                Int                  @id @default(autoincrement())
  title             String               @db.VarChar(45)
  description       String               @db.VarChar(45)
  created_at        DateTime             @default(now())
  community_banner  String?              @db.VarChar(300)
  community_logo    String?              @db.VarChar(300)
  creator_id        Int
}